# buildspec.yml 파일은 애플리케이션에 대한 빌드 실행 중에 수행해야 하는 
# 모든 작업을 AWS CodeBuild에 알립니다. 논리적 구성을 위해 빌드 실행을 
# 별도의 사전 정의된 단계로 나누고, 빌드 실행 작업을 수행하는 
# 프로비저닝된 빌드 서버에서 실행될 명령을 나열할 수 있습니다.
version: 0.2

phases:
  pre_build:
    commands:
      - echo Amazon ECR에 로그인 중...
      # 후속 docker push 명령이 승인되도록 docker 자격 증명을 검색합니다. 
      # AWS CodeBuild 프로젝트의 인스턴스에 할당된 IAM 역할과 연결된 
      # AWS 자격 증명을 사용하여 AWS CLI에서 자동으로 인증을 수행합니다.
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo 빌드 시작 on `date`
      - echo Docker 이미지 빌드 중...
      - docker build -t todolist/service:latest .
      # 서비스 컨테이너에 대한 적절한 Amazon ECR 엔드포인트와 관련 저장소를 사용하여 
      # 빌드된 docker 이미지에 태그를 지정합니다. 이렇게 하면 나중에 docker push 
      # 명령이 실행될 때 적절한 저장소로 푸시됩니다.
      - docker tag todolist/service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todolist/service:latest
  post_build:
    commands:
      - echo 빌드 완료 on `date`
      - echo Docker 이미지 푸시 중...
      # 이미지를 ECR로 푸시합니다.
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todolist/service:latest
      - echo Docker 이미지 푸시 완료. AWS Fargate에 Docker 이미지 배포 중 on `date`
      # ECR로 푸시된 이미지의 이름과 위치가 포함된 아티팩트 파일을 생성합니다. 
      # 이는 AWS CodePipeline에서 이 특정 컨테이너를 Amazon ECS에 자동 배포하는 데 사용됩니다.
      - printf '[{"name":"TodoList-Service","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/todolist/service:latest > imagedefinitions.json
artifacts:
  # 이전 줄에서 생성된 imagedefinitions.json 파일이 빌드 실행 작업의 
  # 아티팩트로 참조 가능함을 나타냅니다.
  files: imagedefinitions.json
